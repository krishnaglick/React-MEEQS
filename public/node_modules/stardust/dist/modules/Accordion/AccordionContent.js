'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Meta = require('../../utils/Meta');

var _Meta2 = _interopRequireDefault(_Meta);

var _propUtils = require('../../utils/propUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function AccordionContent(_ref) {
  var active = _ref.active;
  var children = _ref.children;
  var className = _ref.className;

  var rest = _objectWithoutProperties(_ref, ['active', 'children', 'className']);

  var classes = (0, _classnames2.default)('content', (0, _propUtils.useKeyOnly)(active, 'active'), className);

  return _react2.default.createElement(
    'div',
    _extends({}, rest, { className: classes }),
    children
  );
}

AccordionContent.displayName = 'AccordionContent';

AccordionContent.propTypes = {
  /** Whether or not the content is visible. */
  active: _react.PropTypes.bool,

  /** Primary content of the Content. */
  children: _react.PropTypes.node,

  /** Classes to add to the content className. */
  className: _react.PropTypes.string
};

AccordionContent._meta = {
  library: _Meta2.default.library.semanticUI,
  name: 'AccordionContent',
  type: _Meta2.default.type.module,
  parent: 'Accordion'
};

exports.default = AccordionContent;