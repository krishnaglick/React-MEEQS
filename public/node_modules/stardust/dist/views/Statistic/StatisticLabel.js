'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propUtils = require('../../utils/propUtils');

var _Meta = require('../../utils/Meta');

var _Meta2 = _interopRequireDefault(_Meta);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// TODO: This file has disabled shorthand props
// @see https://github.com/TechnologyAdvice/stardust/pull/334

function StatisticLabel(props) {
  // const { children, className, content } = props
  var children = props.children;
  var className = props.className;

  var classes = (0, _classnames2.default)(className, 'label');
  var rest = (0, _propUtils.getUnhandledProps)(StatisticLabel, props);

  // return <div className={classes} {...rest}>{children || content}</div>
  return _react2.default.createElement(
    'div',
    _extends({}, rest, { className: classes }),
    children
  );
}

StatisticLabel._meta = {
  library: _Meta2.default.library.semanticUI,
  name: 'StatisticLabel',
  parent: 'Statistic',
  type: _Meta2.default.type.view
};

StatisticLabel.propTypes = {
  /** Primary content of the StatisticLabel. */
  children: _propUtils.customPropTypes.all([_propUtils.customPropTypes.mutuallyExclusive(['content']), _react.PropTypes.node]),

  /** Classes that will be added to the StatisticLabel className. */
  className: _react.PropTypes.string

};

exports.default = StatisticLabel;