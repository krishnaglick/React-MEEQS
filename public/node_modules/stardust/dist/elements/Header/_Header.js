'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Meta = require('../../utils/Meta');

var _Meta2 = _interopRequireDefault(_Meta);

var _semanticUtils = require('../../utils/semanticUtils');

var sui = _interopRequireWildcard(_semanticUtils);

var _propUtils = require('../../utils/propUtils');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _Header(props) {
  var _headerElement = props._headerElement;
  var color = props.color;
  var aligned = props.aligned;
  var dividing = props.dividing;
  var block = props.block;
  var attached = props.attached;
  var floated = props.floated;
  var inverted = props.inverted;
  var disabled = props.disabled;
  var icon = props.icon;
  var image = props.image;
  var children = props.children;
  var className = props.className;


  var classes = (0, _classnames2.default)('ui', icon && 'icon', color, (0, _propUtils.useAlignedProp)(aligned), (0, _propUtils.useKeyOnly)(dividing, 'dividing'), (0, _propUtils.useKeyOnly)(block, 'block'), (0, _propUtils.useKeyOrValueAndKey)(attached, 'attached'), (0, _propUtils.useValueAndKey)(floated, 'floated'), (0, _propUtils.useKeyOnly)(inverted, 'inverted'), (0, _propUtils.useKeyOnly)(disabled, 'disabled'), className, 'header');

  var _HeaderComponent = _headerElement;
  var rest = (0, _propUtils.getUnhandledProps)(_Header, props);

  return _react2.default.createElement(
    _HeaderComponent,
    _extends({ className: classes }, rest),
    (0, _propUtils.iconPropRenderer)(icon),
    (0, _propUtils.imagePropRenderer)(image),
    children
  );
}

_Header._meta = {
  library: _Meta2.default.library.semanticUI,
  name: '_Header',
  type: _Meta2.default.type.element,
  props: {
    aligned: sui.textAlignments,
    floated: sui.floats,
    attached: ['top', 'bottom'],
    color: sui.colors
  }
};

_Header.propTypes = {
  _headerElement: _react.PropTypes.string,
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,

  /** Add an icon by icon name or pass an <Icon /.> */
  icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),

  /** Add an image by img src or pass an <Image />. */
  image: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),

  /** Color of the header. */
  color: _react.PropTypes.oneOf(_Header._meta.props.color),

  /** Align header content */
  aligned: _react.PropTypes.oneOf(_Header._meta.props.aligned),

  /** Divide header from the content below it */
  dividing: _react.PropTypes.bool,

  /** Format header to appear inside a content block */
  block: _react.PropTypes.bool,

  /** Attach header  to other content, like a segment */
  attached: _react.PropTypes.oneOf(_Header._meta.props.attached),

  /** Header can sit to the left or right of other content */
  floated: _react.PropTypes.oneOf(_Header._meta.props.floated),

  /** Inverts the color of the header for dark backgrounds */
  inverted: _react.PropTypes.bool,

  /** Show that the header is inactive */
  disabled: _react.PropTypes.bool
};

_Header.defaultProps = {
  _headerElement: 'div'
};

exports.default = _Header;