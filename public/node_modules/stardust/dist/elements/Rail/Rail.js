'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _without2 = require('lodash/without');

var _without3 = _interopRequireDefault(_without2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _semanticUtils = require('../../utils/semanticUtils');

var sui = _interopRequireWildcard(_semanticUtils);

var _propUtils = require('../../utils/propUtils');

var _Meta = require('../../utils/Meta');

var _Meta2 = _interopRequireDefault(_Meta);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A rail is used to show accompanying content outside the boundaries of the main view of a site.
 */
function Rail(props) {
  var attached = props.attached;
  var className = props.className;
  var close = props.close;
  var children = props.children;
  var dividing = props.dividing;
  var internal = props.internal;
  var position = props.position;
  var size = props.size;

  var classes = (0, _classnames2.default)('ui', position, (0, _propUtils.useKeyOnly)(attached, 'attached'), (0, _propUtils.useKeyOrValueAndKey)(close, 'close'), (0, _propUtils.useKeyOnly)(dividing, 'dividing'), (0, _propUtils.useKeyOnly)(internal, 'internal'), size, className, 'rail');
  var rest = (0, _propUtils.getUnhandledProps)(Rail, props);

  return _react2.default.createElement(
    'div',
    _extends({ className: classes }, rest),
    children
  );
}

Rail._meta = {
  library: _Meta2.default.library.semanticUI,
  name: 'Rail',
  props: {
    close: ['very'],
    position: sui.floats,
    size: (0, _without3.default)(sui.sizes, 'medium')
  },
  type: _Meta2.default.type.element
};

Rail.propTypes = {
  /** A rail can appear attached to the main viewport. */
  attached: _react.PropTypes.bool,

  /** Classes that will be added to the Rail className. */
  className: _react.PropTypes.string,

  /** A rail can appear closer to the main viewport. */
  close: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Rail._meta.props.close)]),

  /** Primary content of the Rail. */
  children: _react.PropTypes.node,

  /** A rail can create a division between itself and a container. */
  dividing: _react.PropTypes.bool,

  /** A rail can attach itself to the inside of a container. */
  internal: _react.PropTypes.bool,

  /** A rail can be presented on the left or right side of a container. */
  position: _react.PropTypes.oneOf(Rail._meta.props.position).isRequired,

  /** A rail can have different sizes. */
  size: _react.PropTypes.oneOf(Rail._meta.props.size)
};

exports.default = Rail;