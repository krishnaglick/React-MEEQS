'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Meta = require('../../utils/Meta');

var _Meta2 = _interopRequireDefault(_Meta);

var _propUtils = require('../../utils/propUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * A group of segments can be formatted to appear together.
 */

var SegmentSegments = function (_Component) {
  _inherits(SegmentSegments, _Component);

  function SegmentSegments() {
    _classCallCheck(this, SegmentSegments);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(SegmentSegments).apply(this, arguments));
  }

  _createClass(SegmentSegments, [{
    key: 'render',
    value: function render() {
      var children = this.props.children;


      var classes = (0, _classnames2.default)('ui', this.props.className, 'segments');

      return _react2.default.createElement(
        'div',
        _extends({}, this.props, { className: classes }),
        children
      );
    }
  }]);

  return SegmentSegments;
}(_react.Component);

SegmentSegments.propTypes = {
  /**
   * Must be of type Segment, Segments, H1, H2, H3, H4, H5, H6, Subheader or Message.
   */
  children: _propUtils.customPropTypes.ofComponentTypes(['Segment', 'SegmentSegments', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'Subheader', 'Message']),
  className: _react.PropTypes.string
};
SegmentSegments._meta = {
  library: _Meta2.default.library.semanticUI,
  name: 'SegmentSegments',
  type: _Meta2.default.type.element,
  parent: 'Segment'
};
exports.default = SegmentSegments;