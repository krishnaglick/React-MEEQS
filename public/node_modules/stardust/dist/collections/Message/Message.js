'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _Meta = require('../../utils/Meta');

var _Meta2 = _interopRequireDefault(_Meta);

var _Header = require('../../elements/Header/Header');

var _Header2 = _interopRequireDefault(_Header);

var _Icon = require('../../elements/Icon/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Message = function (_Component) {
  _inherits(Message, _Component);

  function Message() {
    var _Object$getPrototypeO;

    var _temp, _this, _ret;

    _classCallCheck(this, Message);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Message)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleDismiss = function (e) {
      _this.messageElm.transition('fade');
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Message, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.messageElm = (0, _jquery2.default)(this.refs.message);
    }
  }, {
    key: 'render',
    value: function render() {
      var classes = (0, _classnames2.default)('ui', this.props.className, { icon: this.props.icon }, 'message');

      var closeIcon = _react2.default.createElement(_Icon2.default, { name: 'close', onClick: this.handleDismiss });
      var header = _react2.default.createElement(
        _Header2.default,
        null,
        this.props.header
      );
      var icon = _react2.default.createElement(_Icon2.default, { name: this.props.icon });

      // wrap children in <p> if there is a header
      var children = this.props.header ? _react2.default.createElement(
        'p',
        null,
        this.props.children
      ) : this.props.children;

      // wrap header and children in content if there is an icon
      var content = _react2.default.createElement(
        'div',
        { className: 'content' },
        this.props.header && header,
        children
      );

      // prevent spreading icon classes as props on message element
      var messageProps = _extends({}, this.props);
      delete messageProps.icon;

      return _react2.default.createElement(
        'div',
        _extends({}, messageProps, { className: classes, ref: 'message' }),
        this.props.dismissable && closeIcon,
        this.props.icon && icon,
        this.props.icon && content,
        !this.props.icon && this.props.header && header,
        !this.props.icon && this.props.children && children
      );
    }
  }]);

  return Message;
}(_react.Component);

Message.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  dismissable: _react.PropTypes.bool,
  header: _react.PropTypes.string,
  icon: _react.PropTypes.string
};
Message._meta = {
  library: _Meta2.default.library.semanticUI,
  name: 'Message',
  type: _Meta2.default.type.collection
};
exports.default = Message;